// components/pages/auth/Auth.tsx
import React, { useState } from 'react';
import { KeyboardAvoidingView, Platform } from 'react-native';
import {
    Box, VStack, Heading, Text,
    Input, InputField, Button, ButtonText,
    FormControl, FormControlLabel, FormControlLabelText,
    HStack, Badge, BadgeText, FormControlError, FormControlErrorText
} from '@gluestack-ui/themed';

// –•—É–∫ —Å—Ç–æ—Ä–∞
import { useUserStore } from '@/api/user/user.store'; // —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π –ø—É—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

type Props = { onDone?: () => void };

const Auth: React.FC<Props> = () => {
    const [name, setName] = useState('');
    const [email, setEmail] = useState('');

    // –±–µ—Ä—ë–º –º–µ—Ç–æ–¥—ã/—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ —Å—Ç–æ—Ä–∞
    const { login, loading, error } = useUserStore();

    const handleSubmit = () => {
        // –ü—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±—ã–µ –∫—Ä–µ–¥—ã ‚Äî –ø—Ä–æ—Å—Ç–æ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ–º login(thunk).
        // –°–µ—Ä–≤–∏—Å –≤–µ—Ä–Ω—ë—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è voxport/test@voxport.net.
        login({ email: email || 'any@any', password: name || 'any' });
        // onDone –Ω–µ –Ω—É–∂–µ–Ω: —Ä–µ–¥–∏—Ä–µ–∫—Ç –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç —á–µ—Ä–µ–∑ RootGate –ø–æ isAuthed –∏–∑ —Å—Ç–æ—Ä–∞
    };

    return (
        <KeyboardAvoidingView style={{ flex: 1 }} behavior={Platform.OS === 'ios' ? 'padding' : undefined}>
            <Box flex={1} p="$4" justifyContent="center">
                <VStack space="xl">
                    <VStack space="xs">
                        <Heading size="xl">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üëã</Heading>
                        <Text size="sm" color="$textLight600">
                            –í–≤–µ–¥–∏ –∏–º—è –∏ email ‚Äî –∏ –º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º.
                        </Text>
                        <HStack space="sm" mt="$2">
                            <Badge variant="outline" rounded="$full"><BadgeText size="2xs">–û—Ñ—Ñ–ª–∞–π–Ω</BadgeText></Badge>
                            <Badge variant="outline" rounded="$full"><BadgeText size="2xs">–ë–µ–∑ —Å–µ—Ä–≤–µ—Ä–∞</BadgeText></Badge>
                            <Badge variant="outline" rounded="$full"><BadgeText size="2xs">–õ–æ–∫–∞–ª—å–Ω–æ</BadgeText></Badge>
                        </HStack>
                    </VStack>

                    <VStack space="md">
                        <FormControl>
                            <FormControlLabel><FormControlLabelText>–ò–º—è</FormControlLabelText></FormControlLabel>
                            <Input>
                                <InputField
                                    value={name}
                                    onChangeText={setName}
                                    placeholder="–ö–∞–∫ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è"
                                    autoCapitalize="words"
                                    returnKeyType="next"
                                />
                            </Input>
                        </FormControl>

                        <FormControl>
                            <FormControlLabel><FormControlLabelText>Email</FormControlLabelText></FormControlLabel>
                            <Input>
                                <InputField
                                    value={email}
                                    onChangeText={setEmail}
                                    placeholder="you@example.com"
                                    autoCapitalize="none"
                                    keyboardType="email-address"
                                    returnKeyType="done"
                                />
                            </Input>
                        </FormControl>

                        {error ? (
                            <FormControlError>
                                <FormControlErrorText>{String(error)}</FormControlErrorText>
                            </FormControlError>
                        ) : null}
                    </VStack>

                    <Button
                        size="md"
                        rounded="$2xl"
                        isDisabled={loading}
                        onPress={handleSubmit}
                    >
                        <ButtonText>{loading ? '–í—Ö–æ–¥–∏–º‚Ä¶' : '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'}</ButtonText>
                    </Button>

                    <Text size="xs" color="$textLight500">
                        –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ. –ò–∑–º–µ–Ω–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ –≤ ¬´–ù–∞—Å—Ç—Ä–æ–π–∫–∞—Ö¬ª.
                    </Text>
                </VStack>
            </Box>
        </KeyboardAvoidingView>
    );
};

export default Auth;
