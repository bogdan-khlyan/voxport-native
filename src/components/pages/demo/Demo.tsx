// components/Demo.tsx
import React from 'react';
import { ScrollView } from 'react-native';
import {
    Box,
    VStack,
    HStack,
    Heading,
    Text,
    Divider,
    Input,
    InputField,
    Button,
    ButtonText,
    Badge,
    BadgeText,
    Avatar,
    AvatarFallbackText,
    Switch,
    Slider,
    SliderTrack,
    SliderFilledTrack,
    SliderThumb,
    Actionsheet,
    ActionsheetBackdrop,
    ActionsheetDragIndicatorWrapper,
    ActionsheetDragIndicator,
    ActionsheetContent,
    ActionsheetHeader,
    ActionsheetBody,
    ActionsheetItem,
    ActionsheetItemText,
    AlertDialog,
    AlertDialogBackdrop,
    AlertDialogContent,
    AlertDialogHeader,
    AlertDialogBody,
    AlertDialogFooter
} from '@gluestack-ui/themed';
import { useNavigation } from '@react-navigation/native';

import Person from '../contacts/components/Person';   // üëà –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç

const Demo: React.FC = () => {
    const navigation = useNavigation<any>();

    const [room, setRoom] = React.useState<string>('');
    const [online, setOnline] = React.useState<boolean>(true);
    const [volume, setVolume] = React.useState<number>(30);

    const [isSheetOpen, setSheetOpen] = React.useState(false);
    const [isDialogOpen, setDialogOpen] = React.useState(false);

    const onJoin = () => {
        if (!room) return;
        navigation.navigate('Meeting', { room });
    };

    return (
        <Box flex={1} bg="$backgroundLight">
            <ScrollView contentContainerStyle={{ padding: 16 }}>
                <VStack space="lg">
                    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                    <VStack space="xs">
                        <Heading size="2xl">Gluestack Demo</Heading>
                        <Text color="$textLight700">
                            –ë—ã—Å—Ç—Ä—ã–π –æ–±–∑–æ—Ä –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: –ø–æ–ª—è –≤–≤–æ–¥–∞, –∫–Ω–æ–ø–∫–∏, –±–µ–π–¥–∂–∏, –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏, —Å–ª–∞–π–¥–µ—Ä—ã –∏ –º–æ–¥–∞–ª–∫–∏.
                        </Text>
                    </VStack>

                    <Divider />

                    {/* –ë–ª–æ–∫ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ" */}
                    <VStack space="md">
                        <Heading size="lg">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–µ</Heading>
                        <Input>
                            <InputField
                                placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ–º–Ω–∞—Ç—ã"
                                value={room}
                                onChangeText={setRoom}
                                autoCapitalize="none"
                            />
                        </Input>
                        <HStack space="md" alignItems="center">
                            <Button onPress={onJoin} isDisabled={!room}>
                                <ButtonText>Join</ButtonText>
                            </Button>
                            <Badge action={online ? 'success' : 'muted'}>
                                <BadgeText>{online ? 'online' : 'offline'}</BadgeText>
                            </Badge>
                            <Avatar size="md">
                                <AvatarFallbackText>BG</AvatarFallbackText>
                            </Avatar>
                        </HStack>
                    </VStack>

                    <Divider />

                    {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –∏ —Å–ª–∞–π–¥–µ—Ä */}
                    <VStack space="md">
                        <Heading size="lg">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</Heading>
                        <HStack alignItems="center" justifyContent="space-between">
                            <Text>–°—Ç–∞—Ç—É—Å</Text>
                            <HStack space="sm" alignItems="center">
                                <Text color="$textLight700">{online ? 'Online' : 'Offline'}</Text>
                                <Switch value={online} onValueChange={setOnline} />
                            </HStack>
                        </HStack>

                        <VStack space="xs">
                            <HStack justifyContent="space-between" alignItems="center">
                                <Text>–ì—Ä–æ–º–∫–æ—Å—Ç—å</Text>
                                <Text color="$textLight700">{volume}%</Text>
                            </HStack>
                            <Slider
                                value={volume}
                                onChange={(v: number) => setVolume(v)}
                                minValue={0}
                                maxValue={100}
                                step={1}
                            >
                                <SliderTrack>
                                    <SliderFilledTrack />
                                </SliderTrack>
                                <SliderThumb />
                            </Slider>
                        </VStack>
                    </VStack>

                    <Divider />

                    {/* üëá –ù–æ–≤—ã–π –±–ª–æ–∫ —Å–æ —Å–ø–∏—Å–∫–æ–º Person */}
                    <VStack space="md">
                        <Heading size="lg">–°–ø–∏—Å–æ–∫ –ª—é–¥–µ–π</Heading>
                        <Person name="Bogdan Hlyan" email="bogdan@example.com" />
                        <Person name="Alice Johnson" email="alice@example.com" />
                        <Person name="Anton Petrov" email="anton@example.com" />
                    </VStack>

                    <Divider />

                    <Button
                        action="negative"
                        onPress={() => navigation.navigate('Contacts')}
                    >
                        <ButtonText>–ù–ê–ó–ê–î</ButtonText>
                    </Button>

                    {/* Actionsheet */}
                    <VStack space="md">
                        <Heading size="lg">Actionsheet</Heading>
                        <Text color="$textLight700">
                            –ù–∏–∂–Ω–µ–µ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π. –¢—Ä–µ–±—É–µ—Ç –ø–∞–∫–µ—Ç—ã @react-native-aria/overlays –∏ @react-native-aria/dialog.
                        </Text>
                        <Button onPress={() => setSheetOpen(true)}>
                            <ButtonText>–ü–æ–∫–∞–∑–∞—Ç—å Actionsheet</ButtonText>
                        </Button>

                        <Actionsheet isOpen={isSheetOpen} onClose={() => setSheetOpen(false)}>
                            <ActionsheetBackdrop />
                            <ActionsheetContent>
                                <ActionsheetDragIndicatorWrapper>
                                    <ActionsheetDragIndicator />
                                </ActionsheetDragIndicatorWrapper>
                                <ActionsheetHeader>
                                    <Heading size="md">–î–µ–π—Å—Ç–≤–∏—è</Heading>
                                </ActionsheetHeader>
                                <ActionsheetBody>
                                    <ActionsheetItem onPress={() => { setOnline(!online); setSheetOpen(false); }}>
                                        <ActionsheetItemText>{online ? '–°–¥–µ–ª–∞—Ç—å offline' : '–°–¥–µ–ª–∞—Ç—å online'}</ActionsheetItemText>
                                    </ActionsheetItem>
                                    <ActionsheetItem onPress={() => { setDialogOpen(true); setSheetOpen(false); }}>
                                        <ActionsheetItemText>–ü–æ–∫–∞–∑–∞—Ç—å AlertDialog</ActionsheetItemText>
                                    </ActionsheetItem>
                                    <ActionsheetItem onPress={() => setSheetOpen(false)}>
                                        <ActionsheetItemText>–û—Ç–º–µ–Ω–∞</ActionsheetItemText>
                                    </ActionsheetItem>
                                </ActionsheetBody>
                            </ActionsheetContent>
                        </Actionsheet>
                    </VStack>

                    {/* AlertDialog */}
                    <AlertDialog isOpen={isDialogOpen} onClose={() => setDialogOpen(false)}>
                        <AlertDialogBackdrop />
                        <AlertDialogContent>
                            <AlertDialogHeader>
                                <Heading size="lg">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</Heading>
                            </AlertDialogHeader>
                            <AlertDialogBody>
                                <Text>–°–±—Ä–æ—Å–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –∫ –∑–Ω–∞—á–µ–Ω–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (30%)?</Text>
                            </AlertDialogBody>
                            <AlertDialogFooter>
                                <HStack space="sm" justifyContent="flex-end">
                                    <Button variant="outline" onPress={() => setDialogOpen(false)}>
                                        <ButtonText>–û—Ç–º–µ–Ω–∞</ButtonText>
                                    </Button>
                                    <Button
                                        action="negative"
                                        onPress={() => {
                                            setVolume(30);
                                            setDialogOpen(false);
                                        }}
                                    >
                                        <ButtonText>–°–±—Ä–æ—Å–∏—Ç—å</ButtonText>
                                    </Button>
                                </HStack>
                            </AlertDialogFooter>
                        </AlertDialogContent>
                    </AlertDialog>
                </VStack>
            </ScrollView>
        </Box>
    );
};

export default Demo;
